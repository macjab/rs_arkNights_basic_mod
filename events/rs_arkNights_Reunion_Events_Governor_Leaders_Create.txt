namespace = reunion_events_governor_leaders_create

#-----------------------------------------------------

# 1、当有任意的整合运动Governor被改装并实装时的状态Key值
# 当有任意的整合运动Governor被改装并实装时，此值将被设置为1，默认为非0值(新的游戏一局的开始初始化时)或手动设置为0值(immediate模块的开头、或者在after模块里手动设置的说，qwq，虎摸，谢谢)的说，qwq，虎摸，谢谢，
# 此常量的作用域为：country层(owner层)的说，qwq，虎摸，谢谢，
@has_any_reunion_governor_leader_been_installed = "has_any_reunion_governor_leader_been_installed"

#-----------------------------------------------------

# 注意：一般情况下，请勿直接调用此事件处理函数，此函数通过"reunion_Leaders_Spawned_Or_Death_Events_Master_Control.1"事件消息处理函数来让其内部调调用这里面的函数的说，谢谢，
#       而如果仍然想要调用这里的函数的话，则请通过触发"on_leader_spawned = {...}"事件消息来让事件消息的处理流程来自动的调用此消息的说，qwq，虎摸，谢谢，

country_event = {
	id = reunion_events_governor_leaders_create.100

	is_triggered_only = yes

	hide_window = yes

	trigger = {
		has_authority = rs_arkNights_reunion_authorities
		# has_government = rs_arkNights_reunion_goverment

		owner = {
			# is_species_class = rs_arkNights_Reunion_pop_species_1

			# ※备注注意-1：如果这里只有一个判断条件(只有1~2个arkNights人物的话)，这里请不要写OR语句、请直接默认创建这个arkNights人物而不要用随机抽卡，否则会出BUG而导致不走下面内容的异常情况的发生的说，谢谢，

			# 1、只要有以下至少任何一个<整合运动的Governor政治家角色>[未创建]，则就进入到<整合运动的Governor政治家角色>的改造实装阶段
			# 2、否则就什么都不做的说(即默认使用当前已创建的随机本地Governor对象<因为当前是"on_leader_spanwd"事件，其中的单词"spawned"的"ed"则就属于[过去式语法]，即："在领导者创建后，触发此消息"的说，qwq，虎摸，谢谢>，qwq，虎摸，谢谢)，qwq，虎摸，谢谢，
			#OR = {
			#	check_variable = {
			#		which = @rs_arkNights_Reunion_governor_6_stars_WeiYanWu_Is_Alive
			#		value = 0
			#	}
			#	# 特殊的rs_arkNights多重职业角色：
			#	# 霜星：[Governor+Admiral]：
			#	check_variable = {
			#		which = @rs_arkNights_Reunion_governor_or_admiral_6_stars_FronstStar_Is_Alive
			#		value = 0
			#	}
			#}
		}

		fromfrom = {
			leader_class = governor
		}
	}

	immediate = {
		# 3、重置[是否有任意整合运动的Governor政治家被创建]的标识符
		owner = {
			set_variable = {
				which = @has_any_reunion_governor_leader_been_installed
				value = 0
			}
		}

		# 4、正式进入指定<整合运动的Governor政治家角色>的改造实装阶段：
		#    a、通过随机数，来挑选一个当前尚未改造实装的任意<整合运动的Governor政治家角色>进行改造实装的说，qwq，虎摸，谢谢，
		# 抽卡几率说明：
		# 60%: 2星卡(暂时没有这个星级阶段人物卡，直接跳过)，
		# 60%: 3星卡(暂时没有这个星级阶段人物卡，直接跳过)，
		# 40%：4星卡(暂时没有这个星级阶段人物卡，直接跳过)，
		# 50%：5星卡(暂时没有这个星级阶段人物卡，直接跳过)，
		# 30%：6星卡，
		# 10%：7星卡(暂时没有这个星级阶段人物卡，直接跳过)，
		random_list = {
			# 60%: 2星，
			# arkNights create Reunion leader: [60%] chance to create a 2 Stars arkNights Governor Leader (mark: arkNights Game Original Chance Rules)
			# current haven't any 2 Stars generals, skip this create step of Lv.2 Stars of the general leader class at the present until have any 2 Stars general(s) join to our general leaders team in the furture, thank you~

			# 60%: 3星，
			# arkNights create Reunion leader: [60%] chance to create a 3 Stars arkNights Governor Leader (mark: custom Game Original Chance Rules)
			# current haven't any 3 Stars generals, skip this create step of Lv.3 Stars of the general leader class at the present until have any 3 Stars general(s) join to our general leaders team in the furture, thank you~

			# 40%: 4星，
			# arkNights create Reunion leader: [40%] chance to create a 4 Stars arkNights Governor Leader (mark: arkNights Game Original Chance Rules)
			# current haven't any 4 Stars governors, skip this create step of Lv.4 Stars of the governor leader class at the present until have any 4 Stars governor(s) join to our governor leaders team in the furture, thank you~

			# 50%: 5星，
			# arkNights create Reunion leader: [50%] chance to create a 6 Stars arkNights Governor Leader (mark: custom Game Original Chance Rules)
			# current haven't any 5 Stars generals, skip this create step of Lv.5 Stars of the general leader class at the present until have any 5 Stars general(s) join to our general leaders team in the furture, thank you~

			# 30%: 6星，
			# arkNights create Reunion leader: [30%] chance to create a 6 Stars arkNights Governor Leader (mark: custom Game Original Chance Rules)
			30 = {
				random_list = {
					# 改造并实装6星人物：魏彦吾
					1 = { # ※备注-1：随机数根据当前的3星角色人数的增多而减少的说，随机数的设值范围请设置为[10-100](闭区间)的说，qwq，虎摸，谢谢，
						if = {
							limit = {
								owner = {
									check_variable = {
										which = @rs_arkNights_Reunion_governor_6_stars_WeiYanWu_Is_Alive
										value = 0
									}
								}
							}

							# 开始改造并实装：魏彦吾
							fromfromfrom = {
								set_name 		= @rs_arkNights_Reunion_governor_6_stars_WeiYanWu_name
								set_age 		= 26
								set_is_female 	= no
								set_skill		= 1

								change_leader_portrait = rs_arkNights_weiyanwu_portrait_01

								add_trait = rs_arkNights_Reunion_6_Stars_leader_level_trait
								add_trait = rs_arkNights_Reunion_FZ_leader_job_trait
								add_trait = rs_arkNights_governor_weiyanwu_feature_traint_originiumsArts

								set_leader_flag = @rs_arkNights_Reunion_governor_6_stars_WeiYanWu_flag
							}

							# 设置其他周边监控数据：设置其他状态Key所对应的字典变量属性
							owner = {
								# 设置干员[魏彦吾]的生/死状态为：存活状态
								set_variable = {
									which = @rs_arkNights_Reunion_governor_6_stars_WeiYanWu_Is_Alive
									value = 1
								}

								# 设置[是否有任意整合运动的Governor政治家被创建]的标识符为"1"(yes值)的说，qwq，虎摸，谢谢，
								set_variable = {
									which = @has_any_reunion_governor_leader_been_installed
									value = 1
								}
							}
						}
					}

					# 特殊的rs_arkNights多重职业角色：
					# 霜星：[Governor+Admiral]：
					# 改造并实装6星人物：霜星(※备注-1：由于目前"霜星"同时可就职于2个职位[Governor/Admiral]，因此这里的出卡率降低到现有出卡率的1/2的说，qwq，虎摸，谢谢)，qwq，虎摸，谢谢，
					20 = { # ※备注-1：随机数根据当前的3星角色人数的增多而减少的说，随机数的设值范围请设置为[10-100](闭区间)的说，qwq，虎摸，谢谢，
						if = {
							limit = {
								owner = {
									check_variable = {
										which = @rs_arkNights_Reunion_governor_or_admiral_6_stars_FronstStar_Is_Alive
										value = 0
									}
								}
							}

							# 开始改造并实装：霜星
							fromfromfromfrom = {
								set_name 		= @rs_arkNights_Reunion_governor_or_admiral_6_stars_FronstStar_name
								set_age 		= 22
								set_is_female 	= yes
								set_skill		= 1

								change_leader_portrait = rs_arkNights_fronststar_portrait_01

								add_trait = rs_arkNights_Reunion_6_Stars_leader_level_trait
								add_trait = rs_arkNights_Reunion_SS_leader_job_trait
								# add_trait = rs_arkNights_Reunion_other_leaders_trait_oripathy
								add_trait = rs_arkNights_governor_fronstStar_feature_traint_originiumsArts

								set_leader_flag = @rs_arkNights_Reunion_governor_or_admiral_6_stars_FronstStar_flag
							}

							# 设置其他周边监控数据：设置其他状态Key所对应的字典变量属性
							owner = {
								# 设置干员[霜星]的生/死状态为：存活状态
								set_variable = {
									which = @rs_arkNights_Reunion_governor_or_admiral_6_stars_FronstStar_Is_Alive
									value = 1
								}

								# 设置[是否有任意整合运动的Governor政治家被创建]的标识符为"1"(yes值)的说，qwq，虎摸，谢谢，
								set_variable = {
									which = @has_any_reunion_governor_leader_been_installed
									value = 1
								}
							}
						}
					}
				}
			}

			# 10%: 7星，
			# arkNights create Reunion leader: [10%] chance to create a 7 Stars arkNights Governor Leader (mark: custom Game Original Chance Rules)
			# current haven't any 7 Stars governors, skip this create step of Lv.7 Stars of the governor leader class at the present until have any 7 Stars governor(s) join to our governor leaders team in the furture, thank you~
		}
	}

	after = {
		# 5、检测[是否有任意整合运动的Governor政治家被创建]的标识符：
		#    a、如果判断为"0"(no)值，则表示[没有任何的整合运动的Governor政治家被创建]，此时重新添加<本地governor在创建出厂时的随机设置的arkNights的trait特征点属性>的说、并重置[是否有任意整合运动的Governor政治家被创建]的标识符为"0"(no值<默认初始值>)，qwq，虎摸，谢谢，
		#    b、否则什么都不错，然后重置[是否有任意整合运动的Governor政治家被创建]的标识符为"0"(no值<默认初始值>)的说，qwq，虎摸，谢谢，
		if = {
			limit = {
				owner = {
					check_variable = {
						which = @has_any_reunion_governor_leader_been_installed
						value = 0
					}
				}
			}

			# 6、set ruler portrait to the default portrait to prevent to the default amiya_ruler portrait, thank you~
			fromfrom = {
				change_leader_portrait = rs_arkNights_Reunion_Pops_portrait_02
			}

			# 7、重新添加所有的本地governor在创建出厂时的随机设置的arkNights的trait特征点属性：
			# 因为没有任何的arkNights的Governor被创建，所以就没有arkNights的trait<领导者的特征点>的重复叠加问题的说，所以就可以重新添加上这些qwq，虎摸，谢谢，
			# 因此先移除已有的出厂时的随机可能设置的arkNights的trait<领导者的特征点>，然后再添加新的arkNights的trait<领导者的特征点>的说，qwq，虎摸，谢谢)，谢谢，
			fromfrom = {
				# set skill to lv.1
				set_skill	= 1

				# system local governor leader trait(1) assign
#				random_list = {
#					30*@rs_arkNights_global_Reunion_Leaders_advanced_powerUp_Any_Traits_trigger_factory = {
#						add_trait = leader_trait_governor_cyborg
#					}
#
#					30*@rs_arkNights_global_Reunion_Leaders_advanced_powerUp_Any_Traits_trigger_factory = {
#						add_trait = leader_trait_governor_synthetic
#					}
#
#					30*@rs_arkNights_global_Reunion_Leaders_advanced_powerUp_Any_Traits_trigger_factory = {
#						add_trait = leader_trait_governor_erudite
#					}
#
#					30*@rs_arkNights_global_Reunion_Leaders_advanced_powerUp_Any_Traits_trigger_factory = {
#						add_trait = leader_trait_iron_fist
#					}
#
#					30*@rs_arkNights_global_Reunion_Leaders_advanced_powerUp_Any_Traits_trigger_factory = {
#					}
#
#					30*@rs_arkNights_global_Reunion_Leaders_advanced_powerUp_Any_Traits_trigger_factory = {
#						add_trait = leader_trait_architectural_interest
#					}
#
#					30*@rs_arkNights_global_Reunion_Leaders_advanced_powerUp_Any_Traits_trigger_factory = {
#						add_trait = leader_trait_army_veteran
#					}
#
#					30*@rs_arkNights_global_Reunion_Leaders_advanced_powerUp_Any_Traits_trigger_factory = {
#						add_trait = leader_trait_retired_fleet_officer
#					}
#				}
				
				# rs_arkNights governor leader traits(1~2) assign
#				add_trait = rs_arkNights_Reunion_other_leaders_trait_oripathy

				random_list = {
					15 = {
						add_trait = rs_arkNights_Reunion_governor_traint_originiumsArts_1
					}

					15 = {
						add_trait = rs_arkNights_Reunion_governor_traint_originiumsArts_2
					}

					70 = {
						# do nothing here
					}
				}
			}
		}

		# 重置[是否有任意整合运动的Governor政治家被创建]的标识符
		owner = {
			set_variable = {
				which = @has_any_reunion_governor_leader_been_installed
				value = 0
			}
		}
	}
}

#----------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------

# 回收当前指定的Governor政治家
# 流程：[判断是否至少创建了一个rs_arkNights领导者对象->(1、如果有的话)->判断当前回收的领导者是否是rs_arkNights领导者->(1、如果是的话)->回收开关设定、移除flag标识符->数据回收处理完毕；
#													   (2、如果没有的话)->直接完毕的说，qwq，虎摸，谢谢，             (2、如果不是的话)->直接完毕]的说，qwq，虎摸，谢谢，
event = {
	id = reunion_events_governor_leaders_create.101

	is_triggered_only = yes

	hide_window = yes

	trigger = {
		has_authority = rs_arkNights_reunion_authorities
		# has_government = rs_arkNights_reunion_goverment

		owner = {
			# is_species_class = rs_arkNights_Reunion_pop_species_1

			# 1、只要有以下至少任何一个<整合运动的Governor政治家角色>[已创建]，则就进入到<整合运动的Governor政治家角色>的善后数据回收阶段
			# 2、否则就什么都不做的说(即默认使用当前已创建的随机本地Governor对象<因为当前是"on_leader_death/removed"事件，其中的单词"death"的时态和"removed"里的"ed"则就属于[过去式语法]，即："在领导者创建后，触发此消息"的说，qwq，虎摸，谢谢>，qwq，虎摸，谢谢)，qwq，虎摸，谢谢，
			OR = {
				check_variable = {
					which = @rs_arkNights_Reunion_governor_6_stars_WeiYanWu_Is_Alive
					value = 1
				}
				# 特殊的rs_arkNights多重职业角色：
				# 霜星：[Governor+Admiral]：
				check_variable = {
					which = @rs_arkNights_Reunion_governor_or_admiral_6_stars_FronstStar_Is_Alive
					value = 1
				}
			}
		}

		fromfrom = {
			leader_class = governor
		}
	}

	immediate = {
		# 3、正式进入指定<整合运动的Governor政治家角色>的善后回收阶段
		fromfromfrom = {
				# 判断要回收的Governor是否是<魏彦吾>：
			if = {
				limit = {
					has_leader_flag = rs_arkNights_Reunion_governor_6_stars_WeiYanWu_flag

					owner = {
						check_variable = {
							which = @rs_arkNights_Reunion_governor_6_stars_WeiYanWu_Is_Alive
							value = 1
						}
					}
				}

				remove_leader_flag = rs_arkNights_Reunion_governor_6_stars_WeiYanWu_flag
				
				owner = {
					set_variable = {
						which = @rs_arkNights_Reunion_governor_6_stars_WeiYanWu_Is_Alive
						value = 0
					}
				}
			}

			# 特殊的rs_arkNights多重职业角色：
			# 霜星：[Governor+Admiral]：
			# 判断要回收的Governor是否是<霜星>：
			else_if = {
				limit = {
					has_leader_flag = rs_arkNights_Reunion_governor_or_admiral_6_stars_FronstStar_flag

					owner = {
						check_variable = {
							which = @rs_arkNights_Reunion_governor_or_admiral_6_stars_FronstStar_Is_Alive
							value = 1
						}
					}
				}

				remove_leader_flag = rs_arkNights_Reunion_governor_or_admiral_6_stars_FronstStar_flag
				
				owner = {
					set_variable = {
						which = @rs_arkNights_Reunion_governor_or_admiral_6_stars_FronstStar_Is_Alive
						value = 0
					}
				}
			}
		}
	}
}

#----------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------

# 升级当前指定的Governor政治家
# 流程：[判断是否至少创建了一个rs_arkNights领导者对象->(1、如果有的话)->判断当前回收的领导者是否是rs_arkNights领导者->(1、如果是的话)->升级相关数据/肖像和或技能->数据升级完毕；
#													   (2、如果没有的话)->直接完毕的说，qwq，虎摸，谢谢，             (2、如果不是的话)->直接完毕]的说，qwq，虎摸，谢谢，
event = {
	id = reunion_events_governor_leaders_create.102

	is_triggered_only = yes

	hide_window = yes

	trigger = {
		has_authority = rs_arkNights_reunion_authorities
		# has_government = rs_arkNights_reunion_goverment

		owner = {
			# is_species_class = rs_arkNights_Reunion_pop_species_1

			# 1、只要有以下至少任何一个<整合运动的Governor政治家角色>[已创建]，则就进入到<整合运动的Governor政治家角色>的数据/肖像和或技能的数据升级处理阶段，
			# 2、否则就什么都不做的说(即默认使用当前已创建的随机本地Governor对象<因为当前是"on_leader_death/removed"事件，其中的单词"death"的时态和"removed"里的"ed"则就属于[过去式语法]，即："在领导者创建后，触发此消息"的说，qwq，虎摸，谢谢>，qwq，虎摸，谢谢)，qwq，虎摸，谢谢，
			OR = {
				check_variable = {
					which = @rs_arkNights_Reunion_governor_6_stars_WeiYanWu_Is_Alive
					value = 1
				}
				# 特殊的rs_arkNights多重职业角色：
				# 霜星：[Governor+Admiral]：
				check_variable = {
					which = @rs_arkNights_Reunion_governor_or_admiral_6_stars_FronstStar_Is_Alive
					value = 1
				}
			}
		}

		fromfrom = {
			leader_class = governor
		}
	}

	immediate = {
		# 3、正式进入指定<整合运动的Governor政治家角色>的数据升级处理阶段
		fromfromfrom = {
			# 判断要升级的Governor是否是<魏彦吾>：
			if = {
				limit = {
					has_leader_flag = rs_arkNights_Reunion_governor_6_stars_WeiYanWu_flag

					owner = {
						check_variable = {
							which = @rs_arkNights_Reunion_governor_6_stars_WeiYanWu_Is_Alive
							value = 1
						}
					}
				}

				# 升级处理操作
				if = {
					limit = {
						OR = {
							has_experience 	>= @rs_arkNights_Reunion_All_leader_lv_2_exp_value
							has_level		>= 2
							has_skill		>= 2
						}
						
					}

					# ... do some upgrade things any you want here
				}
				else_if = {
					limit = {
						OR = {
							has_experience 	>= @rs_arkNights_Reunion_All_leader_lv_3_exp_value
							has_level		>= 3
							has_skill		>= 3
						}
					}

					# ... do some upgrade things any you want here
				}
				else_if = {
					limit = {
						OR = {
							has_experience 	>= @rs_arkNights_Reunion_All_leader_lv_4_exp_value
							has_level		>= 4
							has_skill		>= 4
						}
					}

					# ... do some upgrade things any you want here
				}
			}

			# 特殊的rs_arkNights多重职业角色：
			# 霜星：[Governor+Admiral]：
			# 判断要升级的Governor是否是<霜星>：
			else_if = {
				limit = {
					has_leader_flag = rs_arkNights_Reunion_governor_or_admiral_6_stars_FronstStar_flag

					owner = {
						check_variable = {
							which = @rs_arkNights_Reunion_governor_or_admiral_6_stars_FronstStar_Is_Alive
							value = 1
						}
					}
				}

				# 升级处理操作
				if = {
					limit = {
						OR = {
							has_experience 	>= @rs_arkNights_Reunion_All_leader_lv_2_exp_value
							has_level		>= 2
							has_skill		>= 2
						}
						
					}

					# ... do some upgrade things any you want here
				}
				else_if = {
					limit = {
						OR = {
							has_experience 	>= @rs_arkNights_Reunion_All_leader_lv_3_exp_value
							has_level		>= 3
							has_skill		>= 3
						}
					}

					# ... do some upgrade things any you want here
				}
				else_if = {
					limit = {
						OR = {
							has_experience 	>= @rs_arkNights_Reunion_All_leader_lv_4_exp_value
							has_level		>= 4
							has_skill		>= 4
						}
					}

					# ... do some upgrade things any you want here
				}
			}
		}
	}
}